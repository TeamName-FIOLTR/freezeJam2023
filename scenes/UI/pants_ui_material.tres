[gd_resource type="VisualShader" load_steps=15 format=3 uid="uid://mjhrivm18527"]

[ext_resource type="Script" path="res://resources/shaders/custom_nodes/get_freeze_color_node.gd" id="1_lvcir"]

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_vr7ob"]
initialized = true
script = ExtResource("1_lvcir")

[sub_resource type="VisualShaderNodeUIntParameter" id="VisualShaderNodeUIntParameter_wxujd"]
parameter_name = "Freeze_Color_Index"
default_value_enabled = true

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_w8r7q"]
operator = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_5av24"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, 1.0]
op_type = 4

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_ki70k"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, 0.5]
op_type = 4

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_tdkoy"]
parameter_name = "Health_Factor"
hint = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_huhm7"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_m7uvu"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_x40cl"]
function = 3

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_vwnry"]
default_input_values = [0, false, 1, Vector3(1, 1, 1), 2, Vector3(0, 0, 0)]
op_type = 4

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_w04vx"]
function = 31

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_l6i66"]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_1ayua"]
source = 5

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform float Health_Factor : hint_range(0, 1);
uniform uint Freeze_Color_Index = 0;


// GetFreezeColor

	global uniform vec4 Freeze_Color_0;
	global uniform vec4 Freeze_Color_1;
	global uniform vec4 Freeze_Color_2;
	global uniform vec4 Freeze_Color_3;
	global uniform vec4 Freeze_Color_4;
	global uniform vec4 Freeze_Color_5;
	

void fragment() {
// FloatParameter:2
	float n_out2p0 = Health_Factor;


// Input:3
	vec2 n_out3p0 = UV;


// VectorDecompose:4
	float n_out4p0 = n_out3p0.x;
	float n_out4p1 = n_out3p0.y;


// FloatFunc:7
	float n_out7p0 = 1.0 - n_out4p1;


// Compare:5
	bool n_out5p0 = n_out2p0 >= n_out7p0;


	vec4 n_out9p0;
// Texture2D:9
	n_out9p0 = texture(TEXTURE, UV);


// UIntParameter:11
	uint n_out11p0 = Freeze_Color_Index;


	vec4 n_out10p0;
// GetFreezeColor:10
	{
		
			switch(n_out11p0){
				case 0u: n_out10p0 = Freeze_Color_0; break;
				case 1u: n_out10p0 = Freeze_Color_1; break;
				case 2u: n_out10p0 = Freeze_Color_2; break;
				case 3u: n_out10p0 = Freeze_Color_3; break;
				case 4u: n_out10p0 = Freeze_Color_4; break;
				case 5u: n_out10p0 = Freeze_Color_5; break;
			}
			
	}


// VectorOp:12
	vec3 n_out12p0 = vec3(n_out9p0.xyz) * vec3(n_out10p0.xyz);


// Mix:13
	float n_in13p2 = 1.00000;
	vec3 n_out13p0 = mix(vec3(n_out9p0.xyz), n_out12p0, n_in13p2);


// Mix:14
	vec3 n_in14p0 = vec3(0.00000, 0.00000, 0.00000);
	float n_in14p2 = 0.50000;
	vec3 n_out14p0 = mix(n_in14p0, n_out13p0, n_in14p2);


	vec3 n_out6p0;
// Switch:6
	n_out6p0 = mix(n_out14p0, n_out12p0, float(n_out5p0));


// Output:0
	COLOR.rgb = n_out6p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1460, 20)
nodes/fragment/2/node = SubResource("VisualShaderNodeFloatParameter_tdkoy")
nodes/fragment/2/position = Vector2(-300, 240)
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_huhm7")
nodes/fragment/3/position = Vector2(-440, 120)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorDecompose_m7uvu")
nodes/fragment/4/position = Vector2(0, 60)
nodes/fragment/5/node = SubResource("VisualShaderNodeCompare_x40cl")
nodes/fragment/5/position = Vector2(480, 100)
nodes/fragment/6/node = SubResource("VisualShaderNodeSwitch_vwnry")
nodes/fragment/6/position = Vector2(1020, 40)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatFunc_w04vx")
nodes/fragment/7/position = Vector2(220, 100)
nodes/fragment/8/node = SubResource("VisualShaderNodeInput_l6i66")
nodes/fragment/8/position = Vector2(-80, -40)
nodes/fragment/9/node = SubResource("VisualShaderNodeTexture_1ayua")
nodes/fragment/9/position = Vector2(280, -140)
nodes/fragment/10/node = SubResource("VisualShaderNodeCustom_vr7ob")
nodes/fragment/10/position = Vector2(100, 500)
nodes/fragment/11/node = SubResource("VisualShaderNodeUIntParameter_wxujd")
nodes/fragment/11/position = Vector2(-260, 500)
nodes/fragment/12/node = SubResource("VisualShaderNodeVectorOp_w8r7q")
nodes/fragment/12/position = Vector2(700, -120)
nodes/fragment/13/node = SubResource("VisualShaderNodeMix_5av24")
nodes/fragment/13/position = Vector2(840, 160)
nodes/fragment/14/node = SubResource("VisualShaderNodeMix_ki70k")
nodes/fragment/14/position = Vector2(1140, 240)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 2, 0, 5, 0, 5, 0, 6, 0, 6, 0, 0, 0, 4, 1, 7, 0, 7, 0, 5, 1, 8, 0, 9, 2, 11, 0, 10, 0, 9, 0, 12, 0, 10, 0, 12, 1, 12, 0, 6, 1, 9, 0, 13, 0, 12, 0, 13, 1, 13, 0, 14, 1, 14, 0, 6, 2)
