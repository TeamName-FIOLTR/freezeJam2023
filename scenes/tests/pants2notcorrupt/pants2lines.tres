[gd_resource type="VisualShader" load_steps=12 format=3 uid="uid://del5e5owc8dlm"]

[ext_resource type="Script" path="res://resources/shaders/custom_nodes/get_freeze_color_node.gd" id="1_nis5l"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_aw4eo"]
parameter_name = "Pulse"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_h44gp"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_8gfqv"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_el15p"]
constant = Color(0.0901961, 1, 1, 1)

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_m4ad5"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, 9.28]
op_type = 4

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_w7d7j"]
initialized = true
script = ExtResource("1_nis5l")

[sub_resource type="VisualShaderNodeUIntParameter" id="VisualShaderNodeUIntParameter_qj50x"]
parameter_name = "Freeze_Color_Index"
default_value_enabled = true

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_axa2u"]
parameter_name = "Base_Brightness"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ok8ba"]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_q7eqy"]
parameter_name = "Pulse_Multiplier"

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform uint Freeze_Color_Index = 0;
uniform float Base_Brightness;
uniform float Pulse_Multiplier;
uniform float Pulse;


// GetFreezeColor

	global uniform vec4 Freeze_Color_0;
	global uniform vec4 Freeze_Color_1;
	global uniform vec4 Freeze_Color_2;
	global uniform vec4 Freeze_Color_3;
	global uniform vec4 Freeze_Color_4;
	global uniform vec4 Freeze_Color_5;
	

void fragment() {
// UIntParameter:6
	uint n_out6p0 = Freeze_Color_Index;


	vec4 n_out5p0;
// GetFreezeColor:5
	{
		
			switch(n_out6p0){
				case 0u: n_out5p0 = Freeze_Color_0; break;
				case 1u: n_out5p0 = Freeze_Color_1; break;
				case 2u: n_out5p0 = Freeze_Color_2; break;
				case 3u: n_out5p0 = Freeze_Color_3; break;
				case 4u: n_out5p0 = Freeze_Color_4; break;
				case 5u: n_out5p0 = Freeze_Color_5; break;
			}
			
	}


// FloatParameter:7
	float n_out7p0 = Base_Brightness;


// FloatParameter:9
	float n_out9p0 = Pulse_Multiplier;


// FloatOp:8
	float n_out8p0 = n_out7p0 * n_out9p0;


// FloatParameter:10
	float n_out10p0 = Pulse;


// Mix:12
	float n_out12p0 = mix(n_out7p0, n_out8p0, n_out10p0);


// Mix:4
	vec3 n_in4p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out4p0 = mix(n_in4p0, vec3(n_out5p0.xyz), n_out12p0);


// Output:0
	ALBEDO = vec3(n_out5p0.xyz);
	EMISSION = n_out4p0;


}
"
graph_offset = Vector2(-510.738, -237.966)
nodes/fragment/0/position = Vector2(560, 100)
nodes/fragment/2/node = SubResource("VisualShaderNodeFloatConstant_8gfqv")
nodes/fragment/2/position = Vector2(80, 360)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorConstant_el15p")
nodes/fragment/3/position = Vector2(-260, 300)
nodes/fragment/4/node = SubResource("VisualShaderNodeMix_m4ad5")
nodes/fragment/4/position = Vector2(357.134, 304.143)
nodes/fragment/5/node = SubResource("VisualShaderNodeCustom_w7d7j")
nodes/fragment/5/position = Vector2(-180, 100)
nodes/fragment/6/node = SubResource("VisualShaderNodeUIntParameter_qj50x")
nodes/fragment/6/position = Vector2(-440, 20)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatParameter_axa2u")
nodes/fragment/7/position = Vector2(-200, 440)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatOp_ok8ba")
nodes/fragment/8/position = Vector2(120, 580)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatParameter_q7eqy")
nodes/fragment/9/position = Vector2(-200, 600)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatParameter_aw4eo")
nodes/fragment/10/position = Vector2(-200, 760)
nodes/fragment/12/node = SubResource("VisualShaderNodeMix_h44gp")
nodes/fragment/12/position = Vector2(380, 520)
nodes/fragment/connections = PackedInt32Array(6, 0, 5, 0, 5, 0, 4, 1, 5, 0, 0, 0, 7, 0, 8, 0, 9, 0, 8, 1, 10, 0, 12, 2, 7, 0, 12, 0, 8, 0, 12, 1, 12, 0, 4, 2, 4, 0, 0, 5)
